OBFUSCATION:
	
	ENTRY (pestilence)
	INFECTION ROUTINE (pestilence)
	STUB (war)

ENTRY:
	entry will not be executed if a specific process is running (AV);
	entry will not be executed if launch into debugguer (AD);

	main -> [foo] -> ]bar[

	main is a clear code, it will check if a process is running and abort
	it will also make the call to ptrace(me), then to infection routine;

	to be able to (no software breakpoint), main(original) will be the key to decrypt foo.
	foo the key for bar etc..

INFECTION ROUTINE:
	SEGMENT_TEXT_REVERSE ?

	The flow of execution has to be linear;

	NOPE:
	main()
	{
		1();
		2();
		3();
	}

	OK:
	main()
	{
		decrypt_1();
		1();
	}
	1()
	{
		decrypt_2();
		2();
	}
	2()
	{
		...
	}

STUB:
	PT_NOTE ?

	The stub is the polymorphic launcher, it will unencrypt entry, infection routine until me, then launch entry;
	The stub will be in clear, so it must be different in every replication;

METAMORPHISM:
	Junk data will be placed everywhere in the stub so each replication is different;


Must be written in reverse order; stub -> infection_routine -> entry;
